#version 460
#extension GL_GOOGLE_include_directive : enable
#include "../common.glsl"
#include "pin_state_flags.glsl"

layout(local_size_x_id = 0, local_size_y_id = 1, local_size_z_id = 2) in;

layout(binding = 0) buffer PIN_STATE {uint pinState[];};
layout(binding = 1) readonly buffer PIN_GRID {GLSLPinGridEntry grid[];};
struct PushStruct
{
	uint   gridSize;
	uint   pinCountPerGridCell;
};
layout(push_constant) uniform PC {PushStruct pc;};

void main()
{
	uvec3 gID = uvec3(gl_GlobalInvocationID.xyz);
	if (gID.x >= pc.gridSize || gID.y >= pc.gridSize || gID.z >= pc.gridSize)
	{
		return;
	}
	uint cellIdx = flatten(gID, uvec3(pc.gridSize))*pc.pinCountPerGridCell;

	for(uint i = 0; i < pc.pinCountPerGridCell; i++)
	{
		uint pinIdx = grid[cellIdx + i].idx;
		pinState[pinIdx] = PIN_STATE_FLAGS_INSIDE_GRID | pinState[pinIdx];
	}
}