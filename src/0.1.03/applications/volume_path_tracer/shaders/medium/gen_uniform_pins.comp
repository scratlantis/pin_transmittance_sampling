#version 460
#extension GL_GOOGLE_include_directive : enable
#include "../random.glsl"
#include "pins_common.glsl"


layout(local_size_x_id = 0, local_size_y_id = 1, local_size_z_id = 2) in;

layout(binding = 0) buffer PINS {GLSLPin pins[];};
struct PushStruct
{
	uint   pinCount;
};
layout(push_constant) uniform PC {PushStruct pc;};

void main()
{
	uint gID = gl_GlobalInvocationID.x;
	if (gID >= pc.pinCount)
	{
		return;
	}
	vec3 direction = normalize(random3D(gID + 1)-vec3(0.5));
	vec3 origin = random3D(gID + pc.pinCount + 1);
	GLSLPin pin = pinFromOriginAndDirection(origin, direction);
	pins[gID] = pin;
}