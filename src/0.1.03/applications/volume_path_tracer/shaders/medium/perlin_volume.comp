#version 460
#extension GL_GOOGLE_include_directive : enable
#include "../random.glsl"
layout(local_size_x_id = 0, local_size_y_id = 1, local_size_z_id = 2) in;

layout(binding = 0, r32f) uniform image3D volumeData;
struct PushStruct
{
	uint   resolution;
	float  perlinFrequency0;
	float  perlinScale0;
	float  perlinFrequency1;
	float  perlinScale1;
	uint   perlinFalloff;
};

layout(push_constant) uniform PC {PushStruct pc;};

void main()
{
	ivec3 gID = ivec3(gl_GlobalInvocationID.xyz);
	if (gID.x >= pc.resolution || gID.y >= pc.resolution || gID.z >= pc.resolution)
	{
		return;
	}
	vec3 pos = vec3(gID) / float(pc.resolution);
	float density0 = pc.perlinScale0 * 200.0 * max( 0.0,(perlinNoise(pos*pc.perlinFrequency0*20.0)) );
	float density1 = pc.perlinScale1 * 200.0 * max( 0.0,(perlinNoise(pos*pc.perlinFrequency1*20.0)) );
	float density = density0 + density1;
	if(pc.perlinFalloff == 1)
	{
		density*= max(0,sin(0.5-distance(pos, vec3(0.5))));
	}
	imageStore(volumeData, gID, vec4(density));

}